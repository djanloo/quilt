<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="base__objects_8hpp" kind="file" language="C++">
    <compoundname>base_objects.hpp</compoundname>
    <includes local="no">cstddef</includes>
    <includes local="no">cmath</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">vector</includes>
    <includes local="no">map</includes>
    <includedby refid="base__objects_8cpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/base_objects.cpp</includedby>
    <includedby refid="devices_8cpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/devices.cpp</includedby>
    <includedby refid="network_8hpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/include/network.hpp</includedby>
    <includedby refid="neuron__models_8hpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/include/neuron_models.hpp</includedby>
    <includedby refid="neurons__base_8hpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/include/neurons_base.hpp</includedby>
    <includedby refid="oscillators_8hpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/include/oscillators.hpp</includedby>
    <includedby refid="network_8cpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/network.cpp</includedby>
    <includedby refid="neuron__models_8cpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/neuron_models.cpp</includedby>
    <includedby refid="neurons__base_8cpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/neurons_base.cpp</includedby>
    <includedby refid="oscillators_8cpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/oscillators.cpp</includedby>
    <includedby refid="test__file_8cpp" local="yes">/home/moremoon/quilt/quilt/src_cpp/test_file.cpp</includedby>
    <incdepgraph>
      <node id="3">
        <label>cmath</label>
      </node>
      <node id="4">
        <label>stdexcept</label>
      </node>
      <node id="6">
        <label>map</label>
      </node>
      <node id="1">
        <label>/home/moremoon/quilt/quilt/src_cpp/include/base_objects.hpp</label>
        <link refid="base__objects_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="2">
        <label>cstddef</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>/home/moremoon/quilt/quilt/src_cpp/include/oscillators.hpp</label>
        <link refid="oscillators_8hpp_source"/>
      </node>
      <node id="5">
        <label>/home/moremoon/quilt/quilt/src_cpp/include/neurons_base.hpp</label>
        <link refid="neurons__base_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/moremoon/quilt/quilt/src_cpp/include/base_objects.hpp</label>
        <link refid="base__objects_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/home/moremoon/quilt/quilt/src_cpp/include/network.hpp</label>
        <link refid="network_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/moremoon/quilt/quilt/src_cpp/include/neuron_models.hpp</label>
        <link refid="neuron__models_8hpp_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="classHierarchicalID" prot="public">HierarchicalID</innerclass>
    <innerclass refid="classEvolutionContext" prot="public">EvolutionContext</innerclass>
    <innerclass refid="classParaMap" prot="public">ParaMap</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstddef&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="classHierarchicalID" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classHierarchicalID" kindref="compound">HierarchicalID</ref>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHierarchicalID" kindref="compound">HierarchicalID</ref><sp/>*<sp/>parent;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHierarchicalID" kindref="compound">HierarchicalID</ref>():parent(NULL),local_id(-1),n_subclasses(0){}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classHierarchicalID" kindref="compound">HierarchicalID</ref>(<ref refid="classHierarchicalID" kindref="compound">HierarchicalID</ref><sp/>*<sp/>parent);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_id();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>local_id;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_subclasses;</highlight></codeline>
<codeline lineno="26"><highlight class="normal">};</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="classEvolutionContext" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classEvolutionContext" kindref="compound">EvolutionContext</ref>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt,<sp/>now;<sp/></highlight><highlight class="comment">//<sp/>time<sp/>in<sp/>millis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classEvolutionContext" kindref="compound">EvolutionContext</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dt);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>do_step();</highlight></codeline>
<codeline lineno="41"><highlight class="normal">};</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="classParaMap" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classParaMap" kindref="compound">ParaMap</ref>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;std::string,<sp/>float&gt;<sp/>value_map;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classParaMap" kindref="compound">ParaMap</ref>();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classParaMap" kindref="compound">ParaMap</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::map&lt;std::string,<sp/>float&gt;<sp/>&amp;<sp/>value_map);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classParaMap" kindref="compound">ParaMap</ref><sp/>&amp;<sp/>new_values);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>add(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>key,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/>&amp;<sp/>key)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="60"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="/home/moremoon/quilt/quilt/src_cpp/include/base_objects.hpp"/>
  </compounddef>
</doxygen>
